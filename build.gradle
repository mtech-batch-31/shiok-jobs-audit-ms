plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
	id "org.flywaydb.flyway" version "9.22.1"
	id 'org.sonarqube' version '4.3.1.3277'
	id 'jacoco'
}

group = 'com.mtech'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	compileOnly 'org.projectlombok:lombok'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	implementation 'org.flywaydb:flyway-core'

	runtimeOnly 'org.postgresql:postgresql'
	compileOnly 'org.projectlombok:lombok'

	annotationProcessor('org.projectlombok:lombok-mapstruct-binding:0.2.0')
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

task installLocalGitHook(type: Copy){
	from new File(rootProject.rootDir, 'scripts/pre-commit')
	into { new File(rootProject.rootDir, '.git/hooks')}
	fileMode 0775
}
build.dependsOn installLocalGitHook
sonarqube {
	properties {
		property "sonar.projectKey", "mtech-batch-31_shiok-jobs-audit-ms"
		property "sonar.organization", "mtech-batch-31"
		property "sonar.host.url", "https://sonarcloud.io"
		property 'sonar.coverage.jacoco.xmlReportPaths', "${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml"
		property 'sonar.coverage.exclusions', "**/entity/**, **/model/**, **/Application*, **/config/*.java"
	}
}

jacocoTestReport {
	dependsOn test

	reports {
		xml.required = true
	}

	afterEvaluate {
		excludedClassFilesForReport(classDirectories)
	}
}

private excludedClassFilesForReport(classDirectories) {
	classDirectories.setFrom(files(classDirectories.files.collect {
		fileTree(dir: it, exclude: [
				'**/entity/*.class',
				'**/model/**/*.class',
				'**/model/*.class',
				'**/Application.class'
		])
	}))
}