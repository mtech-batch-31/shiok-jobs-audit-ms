name: Build and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    types: [ opened, synchronize, reopened ]

permissions: write-all

jobs:
  tests:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      # checkout the codes
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available

      # cache Gradle packages
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      # Run all unit tests
      - name: Run unit tests
        run: ./gradlew test

  generate_jar:
    needs: code_scan
    name: Generate Jar File
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check_and_build
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
      - run: ./gradlew bootJar

      - name: Upload Project Artifact
        uses: actions/upload-artifact@v2
        with:
          name: spring-boot-artifact
          path: |
            build/libs/shiok_jobs_audit_ms.jar
            build/reports

  code_scan:
    needs: tests
    name: Analyze with SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonar --info

      - name: Get SonarCloud quality gate status
        run: |
          STATUS=$(curl -s -u "${{ secrets.SONAR_TOKEN }}": "https://sonarcloud.io/api/qualitygates/project_status?projectKey=${{ secrets.PROJECT_KEY }}" | jq -r .projectStatus.status)
          echo "Quality gate status is $STATUS"   
          if [[ "$STATUS" != "OK" ]]; then
          echo "Quality gate failed"
            exit 1
          fi

      - name: Upload Code Coverage Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-artifact
          path: |
            build/reports/jacoco/test/html/

      - name: Upload Lint (Checkstyle) Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: lint-artifact
          path: |
            build/reports/checkstyle/

      - name: Upload SonarCloud Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sast-artifact
          path: |
            build/sonar/report-task.txt
